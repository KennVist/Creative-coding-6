import java.util.ArrayList;

class Snowflake {
  PVector position;
  float radius;
  float angle;

  Snowflake(PVector position, float radius, float angle) {
    this.position = position;
    this.radius = radius;
    this.angle = angle;
  }

  void draw() {
    push();
    translate(position.x, position.y);
    rotate(radians(angle));
    drawHexagon(0, 0, radius);
    pop();
  }

  void drawHexagon(float x, float y, float size) {
    float angleIncrement = TWO_PI / 6;
    beginShape();
    fill(0, 0, 200, 150); 
    stroke(0, 0, 255, 200); 
    for (int i = 0; i < 6; i++) {
      float angle = i * angleIncrement;
      float vertexX = x + size * cos(angle);
      float vertexY = y + size * sin(angle);
      vertex(vertexX, vertexY);
    }
    endShape(CLOSE);
  }
}


class Organism {
  Snowflake snowflake;
  float speedX, speedY;

  Organism(float x, float y, float size) {
    snowflake = new Snowflake(new PVector(x, y), size, 60);
    speedX = random(-1, 1);
    speedY = random(-1, 1);
  }

  void update() {
    snowflake.position.x += speedX;
    snowflake.position.y += speedY;

  
    if (snowflake.position.x < 0 || snowflake.position.x > width) {
      speedX *= -1;
    }
    if (snowflake.position.y < 0 || snowflake.position.y > height) {
      speedY *= -1;
    }
  }

  void display() {

    snowflake.draw();
  }
}


ArrayList<Organism> organisms;

void setup() {
  size(800, 600);
  organisms = new ArrayList<Organism>();


  for (int i = 0; i < 20; i++) {
    float x = random(width);
    float y = random(height);
    float size = random(10, 30);
    Organism organism = new Organism(x, y, size);
    organisms.add(organism);
  }
}

void draw() {
  background(0);

  for (Organism organism : organisms) {
    organism.update();
    organism.display();
  }
}

void mousePressed() {

  float x = mouseX;
  float y = mouseY;
  float size = random(10, 30);
  Organism organism = new Organism(x, y, size);
  organisms.add(organism);
}

void drawHexagon(float x, float y, float size) {
  float angleIncrement = TWO_PI / 6;
  beginShape();
  fill(0, 0, 100, 50); 
  stroke(0, 0, 255, 100); 
  for (int i = 0; i < 6; i++) {
    float angle = i * angleIncrement;
    float vertexX = x + size * cos(angle);
    float vertexY = y + size * sin(angle);
    vertex(vertexX, vertexY);
  }
  endShape(CLOSE);
}
